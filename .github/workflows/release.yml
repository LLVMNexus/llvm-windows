name: release

concurrency:
  group: release-${{ github.head_ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "llvmorg-*"

jobs:
  build:
    name: Build llvm on Windows
    runs-on: windows-2022
    strategy:
      matrix:
        rtlib: ["MultiThreadedDLL"]
    steps:
    - name: Install dependency
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install --no-progress ninja vswhere 7zip.install
    - name: Upgrade dependency
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: upgrade --no-progress llvm
    - uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
      with:
        sdk-version: 26100

    - name: Checkout code
      uses: actions/checkout@v4
    - name: Ensure git safe directory
      run: |
        git config --global --add safe.directory $(pwd)

    - name: Checkout llvm
      if: ${{ github.event_name == 'push' }}
      run: git clone --quiet --branch llvmorg-19.1.6 --depth 1 https://github.com/llvm/llvm-project.git

    - name: Build llvm stage 1
      run: |
        $vsPath = (vswhere -latest -property installationPath)
        Import-Module (Join-Path $vsPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
        Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation -DevCmdArguments "-arch=x64 -host_arch=x64 -winsdk=10.0.26100.0"
        $prefix = "$pwd\prefix"
        $Env:CC = "clang-cl"
        $Env:CXX = "clang-cl"
        $cmake_mt = "mt"
        $cmake_sys_ver = "10.0.26100.0"
        cmake -Bbuild -GNinja -DCMAKE_SYSTEM_VERSION=$cmake_sys_ver -DCMAKE_MSVC_RUNTIME_LIBRARY=${{ matrix.rtlib }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=$prefix -DCMAKE_MT:PATH=$cmake_mt -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_ENABLE_PROJECTS="lld;clang;clang-tools-extra" -DLLVM_ENABLE_DIA_SDK=OFF llvm-project\llvm
        cmake --build build --target install
        Remove-Item -Recurse -Force build

    - name: Build llvm stage 2
      run: |
        $vsPath = (vswhere -latest -property installationPath)
        Import-Module (Join-Path $vsPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
        Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation -DevCmdArguments "-arch=x64 -host_arch=x64 -winsdk=10.0.26100.0"
        $prefix = "$pwd\prefix"
        $Env:CC = "$prefix\bin\clang-cl.exe"
        $Env:CXX = "$prefix\bin\clang-cl.exe"
        $cmake_mt = "mt"
        $cmake_sys_ver = "10.0.26100.0"
        cmake -Bbuild -GNinja -DCMAKE_SYSTEM_VERSION=$cmake_sys_ver -DCMAKE_MSVC_RUNTIME_LIBRARY=${{ matrix.rtlib }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=$prefix -DCMAKE_MT:PATH=$cmake_mt -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_ENABLE_PROJECTS="lld;clang;clang-tools-extra" -DLLVM_ENABLE_DIA_SDK=OFF llvm-project\llvm
        cmake --build build --target install

    - name: Create zip package
      run: |
        Rename-Item prefix LLVM-19.1.6-win64
        7z a -mx=9 -tzip -mtm=off -mtc=off -mta=off LLVM-19.1.6-win64-${{ matrix.rtlib }}.zip LLVM-19.1.6-win64

    - name: Create release and Upload LLVM zip package
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create --draft --prerelease --notes-from-tag llvmorg-19.1.6 $pwd\LLVM-19.1.6-win64-${{ matrix.rtlib }}.zip
